---
- name: create download directory for hive
  file:
    path: "{{ hive_download_path}}"
    state: directory

- name: download hive
  get_url:
    url: "{{ hive_url }}"
    dest: "{{ hive_download_path }}/hive-{{ hive_version }}.tgz"

- name: create directory for hive
  file:
    path: "{{ hive_dir}}"
    state: directory

- name: unarchive hive
  unarchive:
    src: "{{ hive_download_path }}/hive-{{ hive_version }}.tgz"
    dest: "{{ hive_dir }}"
    creates: "hive-{{ hive_version }}"
    copy: no

- name: create download directory for derby
  file:
    path: "{{ derby_download_path}}"
    state: directory

- name: download derby
  get_url:
    url: "{{ derby_url }}"
    dest: "{{ derby_download_path }}/db-derby-{{ derby_version }}.tgz"

- name: create directory for derby
  file:
    path: "{{ derby_dir}}"
    state: directory

- name: unarchive derby
  unarchive:
    src: "{{ derby_download_path }}/db-derby-{{ derby_version }}.tgz"
    dest: "{{ derby_dir }}"
    creates: "db-derby-{{ derby_version }}-bin"
    copy: no

- name: add HIVE_HOME env to bashrc
  lineinfile:
    dest: /root/.bashrc
    line: "export HIVE_HOME={{ hive_install_path }}"

- name: add hive binary to PATH
  lineinfile:
    dest: /root/.bashrc
    line: "export PATH=$HIVE_HOME/bin:$PATH"

- name: add jars to calsspath
  lineinfile:
    dest: /root/.bashrc
    line: "export CLASSPATH=$CLASSPATH:{{ hive_install_path }}/lib"

- name: add derby jars to classpath
  lineinfile:
    dest: /root/.bashrc
    line: "export CLASSPATH=$CLASSPATH:{{ derby_install_path }}/lib"

- name: make hive conf
  template:
    src: hive-site.xml.j2
    dest: "{{ hive_install_path }}/conf/hive-site.xml"

    #- name: copy derby jars to hive 
    #  command: cp "{{ derby_install_path }}/lib/*"  "{{ hive_install_path }}/lib/" 

#TODO(pprokop): copy jars from derby to hive
#launch derby in systemd unit file (./startNetworkServer -h 0.0.0.0)
